import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Random;

class pilka extends JPanel{
    Timer timer;
    Random random = new Random();
    int x;
    int y;
    int startx;
    int starty;
    float speedx;
    float speedy;


    public pilka(){
        this.startx = 400;
        this.starty = 100;
        this.x = this.startx;
        this.y = this.starty;
        this.speedx = random.nextInt(-20, 20);
        this.speedy = random.nextInt(20);
    }

    private void update(){
        int w = getWidth();
        int h = getHeight();
        x = x + (int)speedx;
        y = y + (int)speedy;

        if (x > 800){
            speedx = -speedx;
            speedx = speedx*0.9f;
            speedy = speedy*0.9f;
        }
        if (y > 600){
            speedy = -speedy;
            speedx = speedx*0.9f;
            speedy = speedy*0.9f;
        }
        if (x < 0){
            speedx = -speedx;
            speedx = speedx*0.9f;
            speedy = speedy*0.9f;
        }
        if (y < 0){
            speedy = -speedy;
            speedx = speedx*0.9f;
            speedy = speedy*0.9f;
        }
    }

    public void paint(Graphics g){
        update();
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        g2d.fillOval(this.x, this.y, 10, 10);

    }
}


class kontener extends  JPanel{
    ArrayList<pilka> plist;
    Timer timer;

    public kontener(){
        plist = new ArrayList<pilka>();
        for (int i = 0; i < 10; i++) {
            plist.add(new pilka());
        }

        timer = new Timer(100, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                repaint();
            }
        });
        timer.start();
    }

    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        for (int i = 0; i < plist.size(); i++) {
            plist.get(i).paint(g);
        }
    }
}

public class main {
    public static void main(String[] args) {
        JFrame f = new JFrame("Moje okno");
        f.setSize(800, 600);

        kontener panel = new kontener();
        f.add(panel);

        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setVisible(true);
    }
}
